/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.poi.generated.request.apps

import cloud.pace.sdk.api.poi.POIAPI
import cloud.pace.sdk.api.poi.generated.model.LocationBasedAppsWithRefs
import cloud.pace.sdk.api.request.BaseRequest
import com.google.gson.annotations.SerializedName
import com.squareup.moshi.Json
import retrofit2.Call
import retrofit2.http.GET
import retrofit2.http.HeaderMap
import retrofit2.http.Query

object CheckForPaceAppAPI {

    interface CheckForPaceAppService {
        /* Query for location-based apps
 */
        /* These location-based PACE apps deliver additional services for PACE customers based on their current position.
You can (or should) trigger this whenever:
* A longer stand-still is detected
* The engine is turned off
* Every 5 seconds if the user "left the road"
Please note that calling this API is very cheap and can be done regularly.
 */
        @GET("apps/query")
        fun checkForPaceApp(
            @HeaderMap headers: Map<String, String>,
            /* Latitude */
            @Query("filter[latitude]") filterlatitude: Float,
            /* Longitude */
            @Query("filter[longitude]") filterlongitude: Float,
            /* Type of location-based app */
            @Query("filter[appType]") filterappType: FilterappType? = null
        ): Call<LocationBasedAppsWithRefs>
    }

    /* Type of location-based app */
    enum class FilterappType(val value: String) {
        @SerializedName("fueling")
        @Json(name = "fueling")
        FUELING("fueling")
    }

    open class Request : BaseRequest() {

        fun checkForPaceApp(
            filterlatitude: Float,
            filterlongitude: Float,
            filterappType: FilterappType? = null,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<LocationBasedAppsWithRefs> {
            val headers = headers(true, "application/vnd.api+json", "application/vnd.api+json", additionalHeaders)

            return retrofit(POIAPI.baseUrl, additionalParameters, readTimeout)
                .create(CheckForPaceAppService::class.java)
                .checkForPaceApp(
                    headers,
                    filterlatitude,
                    filterlongitude,
                    filterappType
                )
        }
    }

    fun POIAPI.AppsAPI.checkForPaceApp(
        filterlatitude: Float,
        filterlongitude: Float,
        filterappType: FilterappType? = null,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().checkForPaceApp(
        filterlatitude,
        filterlongitude,
        filterappType,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
