/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.user.generated.request.user

import cloud.pace.sdk.api.request.BaseRequest
import cloud.pace.sdk.api.user.UserAPI
import cloud.pace.sdk.api.user.generated.model.*
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.http.*

object VerifyEmailAPI {

    interface VerifyEmailService {
        /* Verify Email */
        /* Verifies that the given Email is not already used.
 */
        @GET("user/email/verify")
        fun verifyEmail(
            @HeaderMap headers: Map<String, String>,
            @retrofit2.http.Body body: Email
        ): Call<ResponseBody>
    }

    open class Request : BaseRequest() {

        fun verifyEmail(
            body: Email,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<ResponseBody> {
            val headers = headers(false, "application/json", "application/json", additionalHeaders)

            return retrofit(UserAPI.baseUrl, additionalParameters, readTimeout)
                .create(VerifyEmailService::class.java)
                .verifyEmail(
                    headers,
                    body
                )
        }
    }

    fun UserAPI.UserAPI.verifyEmail(
        body: Email,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().verifyEmail(
        body,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
