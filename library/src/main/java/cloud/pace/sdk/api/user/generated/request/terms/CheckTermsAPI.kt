/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.user.generated.request.terms

import cloud.pace.sdk.api.request.BaseRequest
import cloud.pace.sdk.api.user.UserAPI
import cloud.pace.sdk.api.user.generated.model.*
import com.google.gson.annotations.SerializedName
import com.squareup.moshi.Json
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.http.*

object CheckTermsAPI {

    interface CheckTermsService {
        /* Checks acceptance of the terms of service for a user and a service. */
        /* Fetches the latest terms for the given UUID.
In order to identify the user any oauth2 token must be passed.
 */
        @GET("terms/check")
        fun checkTerms(
            @HeaderMap headers: Map<String, String>,
            /* The name of the service */
            @Query("filter[serviceName]") filterserviceName: FilterserviceName,
            @Query("redirectUri") redirectUri: String? = null
        ): Call<ResponseBody>
    }

    /* The name of the service */
    enum class FilterserviceName(val value: String) {
        @SerializedName("PACE ID")
        @Json(name = "PACE ID")
        PACEID("PACE ID"),
        @SerializedName("PACE Connected Fueling")
        @Json(name = "PACE Connected Fueling")
        PACECONNECTEDFUELING("PACE Connected Fueling"),
        @SerializedName("PACE Pay")
        @Json(name = "PACE Pay")
        PACEPAY("PACE Pay"),
        @SerializedName("PACE Community")
        @Json(name = "PACE Community")
        PACECOMMUNITY("PACE Community"),
        @SerializedName("PACE Car App")
        @Json(name = "PACE Car App")
        PACECARAPP("PACE Car App"),
        @SerializedName("PACE Drive App")
        @Json(name = "PACE Drive App")
        PACEDRIVEAPP("PACE Drive App")
    }

    open class Request : BaseRequest() {

        fun checkTerms(
            filterserviceName: FilterserviceName,
            redirectUri: String? = null,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<ResponseBody> {
            val headers = headers(true, "application/json", "application/json", additionalHeaders)

            return retrofit(UserAPI.baseUrl, additionalParameters, readTimeout)
                .create(CheckTermsService::class.java)
                .checkTerms(
                    headers,
                    filterserviceName,
                    redirectUri
                )
        }
    }

    fun UserAPI.TermsAPI.checkTerms(
        filterserviceName: FilterserviceName,
        redirectUri: String? = null,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().checkTerms(
        filterserviceName,
        redirectUri,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
