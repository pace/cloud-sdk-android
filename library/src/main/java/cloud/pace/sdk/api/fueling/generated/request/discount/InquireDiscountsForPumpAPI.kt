/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.fueling.generated.request.discount

import cloud.pace.sdk.api.fueling.FuelingAPI
import cloud.pace.sdk.api.fueling.generated.model.DiscountInquiryBody
import cloud.pace.sdk.api.fueling.generated.model.Discounts
import cloud.pace.sdk.api.request.BaseRequest
import retrofit2.Call
import retrofit2.http.*

object InquireDiscountsForPumpAPI {

    interface InquireDiscountsForPumpService {
        /* Inquires discounts from discount providers */
        /* The request inquires about discounts for a specific pump and needs to be used before authorizing the payment token. After a discount offer was given the token can be authorized with the discount id in order to activate the discount.
This request is not idempotent and can return a different result on the second invocation.
Only use this if the pump status is ready to pay, otherwise returns `403 Forbidden`.
 */
        @POST("gas-stations/{gasStationId}/pumps/{pumpId}/discounts")
        fun inquireDiscountsForPump(
            @HeaderMap headers: Map<String, String>,
            /* Gas station ID */
            @Path("gasStationId") gasStationId: String,
            /* Pump ID */
            @Path("pumpId") pumpId: String,
            @retrofit2.http.Body body: Body
        ): Call<Discounts>
    }

    /* The request inquires about discounts for a specific pump and needs to be used before authorizing the payment token. After a discount offer was given the token can be authorized with the discount id in order to activate the discount.
    This request is not idempotent and can return a different result on the second invocation.
    Only use this if the pump status is ready to pay, otherwise returns `403 Forbidden`.
     */
    class Body {

        var data: DiscountInquiryBody? = null
    }

    open class Request : BaseRequest() {

        fun inquireDiscountsForPump(
            gasStationId: String,
            pumpId: String,
            body: Body,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<Discounts> {
            val headers = headers(true, "application/vnd.api+json", "application/vnd.api+json", additionalHeaders)

            return retrofit(FuelingAPI.baseUrl, additionalParameters, readTimeout)
                .create(InquireDiscountsForPumpService::class.java)
                .inquireDiscountsForPump(
                    headers,
                    gasStationId,
                    pumpId,
                    body
                )
        }
    }

    fun FuelingAPI.DiscountAPI.inquireDiscountsForPump(
        gasStationId: String,
        pumpId: String,
        body: Body,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().inquireDiscountsForPump(
        gasStationId,
        pumpId,
        body,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
