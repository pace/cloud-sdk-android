/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.user.generated.request.credentials

import cloud.pace.sdk.api.request.BaseRequest
import cloud.pace.sdk.api.user.UserAPI
import cloud.pace.sdk.api.user.generated.model.*
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.http.*

object UpdateUserPINAPI {

    interface UpdateUserPINService {
        /* Set the new PIN */
        /* Sets the PIN of the user. The user has to select a secure PIN, this is ensured via rules. If one of the rules fails `406` is returned. To set the PIN an account OTP needs to be provided.
The following rules apply to verify the PIN:
* must be 4 digits long
* must use 3 different digits
* must not be a numerical series (e.g. 1234, 4321, ...)
 */
        @PUT("user/pin")
        fun updateUserPIN(
            @HeaderMap headers: Map<String, String>,
            @retrofit2.http.Body body: Body
        ): Call<ResponseBody>
    }

    /* Sets the PIN of the user. The user has to select a secure PIN, this is ensured via rules. If one of the rules fails `406` is returned. To set the PIN an account OTP needs to be provided.
    The following rules apply to verify the PIN:
    * must be 4 digits long
    * must use 3 different digits
    * must not be a numerical series (e.g. 1234, 4321, ...)
     */
    class Body {

        var data: UserPINAndOTPBody? = null
    }

    open class Request : BaseRequest() {

        fun updateUserPIN(
            body: Body,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<ResponseBody> {
            val headers = headers(true, "application/vnd.api+json", "application/vnd.api+json", additionalHeaders)

            return retrofit(UserAPI.baseUrl, additionalParameters, readTimeout)
                .create(UpdateUserPINService::class.java)
                .updateUserPIN(
                    headers,
                    body
                )
        }
    }

    fun UserAPI.CredentialsAPI.updateUserPIN(
        body: Body,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().updateUserPIN(
        body,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
