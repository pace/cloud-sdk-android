/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.user.generated.request.phone

import cloud.pace.sdk.api.request.BaseRequest
import cloud.pace.sdk.api.user.UserAPI
import cloud.pace.sdk.api.user.generated.model.*
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.http.*

object VerifyUserPhoneAPI {

    interface VerifyUserPhoneService {
        /* Verifies the users phone number */
        /* Verifies the phone number of the user using the code send via sms.
 */
        @PUT("user/phone/verify")
        fun verifyUserPhone(
            @HeaderMap headers: Map<String, String>,
            @retrofit2.http.Body body: VerifyUserPhone
        ): Call<ResponseBody>
    }

    open class Request : BaseRequest() {

        fun verifyUserPhone(
            body: VerifyUserPhone,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<ResponseBody> {
            val headers = headers(true, "application/json", "application/json", additionalHeaders)

            return retrofit(UserAPI.baseUrl, additionalParameters, readTimeout)
                .create(VerifyUserPhoneService::class.java)
                .verifyUserPhone(
                    headers,
                    body
                )
        }
    }

    fun UserAPI.PhoneAPI.verifyUserPhone(
        body: VerifyUserPhone,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().verifyUserPhone(
        body,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
