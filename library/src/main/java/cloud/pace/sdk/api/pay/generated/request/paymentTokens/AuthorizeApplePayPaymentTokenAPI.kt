/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.pay.generated.request.paymentTokens

import cloud.pace.sdk.api.pay.PayAPI
import cloud.pace.sdk.api.pay.generated.model.PaymentMethod
import cloud.pace.sdk.api.pay.generated.model.PaymentMethodKind
import cloud.pace.sdk.api.pay.generated.model.PaymentMethodVendor
import cloud.pace.sdk.api.pay.generated.model.PaymentToken
import cloud.pace.sdk.api.pay.generated.model.PaymentTokenCreateApplePayBody
import cloud.pace.sdk.api.request.BaseRequest
import retrofit2.Call
import retrofit2.http.*

object AuthorizeApplePayPaymentTokenAPI {

    interface AuthorizeApplePayPaymentTokenService {
        /* Authorize a payment using Apple Pay by providing a Apple Pay token. */
        /* When successful, returns a paymentToken value. Requires the caller to interact with Apple Pay
to create the `applePay` section.
Clients need to call `/payment-method-kinds/applepay/session` beforehand to obtain a Apple Pay
PaymentSession that can be used to obtain the applePay payload.
 */
        @POST("payment-method-kinds/applepay/authorize")
        fun authorizeApplePayPaymentToken(
            @HeaderMap headers: Map<String, String>,
            @retrofit2.http.Body body: Body
        ): Call<PaymentToken>
    }

    /* When successful, returns a paymentToken value. Requires the caller to interact with Apple Pay
    to create the `applePay` section.
    Clients need to call `/payment-method-kinds/applepay/session` beforehand to obtain a Apple Pay
    PaymentSession that can be used to obtain the applePay payload.
     */
    class Body {

        var data: PaymentTokenCreateApplePayBody? = null
    }

    open class Request : BaseRequest() {

        fun authorizeApplePayPaymentToken(
            body: Body,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<PaymentToken> {
            val resources = listOf(PaymentMethod::class.java, PaymentMethodKind::class.java, PaymentMethodVendor::class.java, PaymentToken::class.java)
            val headers = headers(true, "application/vnd.api+json", "application/vnd.api+json", additionalHeaders)

            return retrofit(PayAPI.baseUrl, additionalParameters, readTimeout, resources)
                .create(AuthorizeApplePayPaymentTokenService::class.java)
                .authorizeApplePayPaymentToken(
                    headers,
                    body
                )
        }
    }

    fun PayAPI.PaymentTokensAPI.authorizeApplePayPaymentToken(
        body: Body,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().authorizeApplePayPaymentToken(
        body,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
