/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.user.generated.request.user

import cloud.pace.sdk.api.request.BaseRequest
import cloud.pace.sdk.api.user.UserAPI
import cloud.pace.sdk.api.user.generated.model.*
import retrofit2.Call
import retrofit2.http.*

object SetUserAPI {

    interface SetUserService {
        /* Set the user data of the given user. */
        /* All fields of the user get set to the provided values.
 */
        @PUT("users/{userId}")
        fun setUser(
            @HeaderMap headers: Map<String, String>,
            @Path("userId") userId: String? = null
        ): Call<User>
    }

    open class Request : BaseRequest() {

        fun setUser(
            userId: String? = null,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<User> {
            val headers = headers(true, "application/vnd.api+json", "application/vnd.api+json", additionalHeaders)

            return retrofit(UserAPI.baseUrl, additionalParameters, readTimeout)
                .create(SetUserService::class.java)
                .setUser(
                    headers,
                    userId
                )
        }
    }

    fun UserAPI.UserAPI.setUser(
        userId: String? = null,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().setUser(
        userId,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
