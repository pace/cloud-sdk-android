/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.pay.generated.request.paymentTransactions

import cloud.pace.sdk.api.pay.PayAPI
import cloud.pace.sdk.api.request.BaseRequest
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.http.GET
import retrofit2.http.HeaderMap
import retrofit2.http.Path
import retrofit2.http.Query

object GetReceiptAPI {

    interface GetReceiptService {
        /* Get receipt (download,file) for a single transaction as png */
        /* Provides the receipt that has already been sent via email (when processing the payment) as download in png image format.
 */
        @GET("receipts/{transactionID}")
        fun getReceipt(
            @HeaderMap headers: Map<String, String>,
            /* ID of the payment transaction */
            @Path("transactionID") transactionID: String,
            /* (Optional) Specify the language you want the returned receipt to be localized in.
Returns the receipt in the default language that is available if the specified language is not available.
Language does not have to be valid language. For example, `language=local` means that the receipt should be displayed
in the language that is determined to be spoken in the area that the point of intereset at which the receipt has been generated at.
*Prefer using the `Accept-Language` header if you use this endpoint on an end-user device.*
 */
            @Query("language") language: String? = null
        ): Call<ResponseBody>
    }

    open class Request : BaseRequest() {

        fun getReceipt(
            transactionID: String,
            language: String? = null,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<ResponseBody> {
            val headers = headers(true, "application/json", "application/json", additionalHeaders)

            return retrofit(PayAPI.baseUrl, additionalParameters, readTimeout)
                .create(GetReceiptService::class.java)
                .getReceipt(
                    headers,
                    transactionID,
                    language
                )
        }
    }

    fun PayAPI.PaymentTransactionsAPI.getReceipt(
        transactionID: String,
        language: String? = null,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().getReceipt(
        transactionID,
        language,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
