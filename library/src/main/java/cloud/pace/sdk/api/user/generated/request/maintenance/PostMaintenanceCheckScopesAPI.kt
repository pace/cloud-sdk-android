/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.user.generated.request.maintenance

import cloud.pace.sdk.api.request.BaseRequest
import cloud.pace.sdk.api.user.UserAPI
import cloud.pace.sdk.api.user.generated.model.*
import retrofit2.Call
import retrofit2.http.*

object PostMaintenanceCheckScopesAPI {

    interface PostMaintenanceCheckScopesService {
        /* Compares the scopes between our api-definitions and Keycloak */
        @POST("maintenance/check-scopes")
        fun postMaintenanceCheckScopes(
            @HeaderMap headers: Map<String, String>,
            @retrofit2.http.Body body: Body
        ): Call<Scopes>
    }

    /* Compares the scopes between our api-definitions and Keycloak */
    class Body {

        var data: ScopesBody? = null
    }

    open class Request : BaseRequest() {

        fun postMaintenanceCheckScopes(
            body: Body,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<Scopes> {
            val headers = headers(false, "application/vnd.api+json", "application/vnd.api+json", additionalHeaders)

            return retrofit(UserAPI.baseUrl, additionalParameters, readTimeout)
                .create(PostMaintenanceCheckScopesService::class.java)
                .postMaintenanceCheckScopes(
                    headers,
                    body
                )
        }
    }

    fun UserAPI.MaintenanceAPI.postMaintenanceCheckScopes(
        body: Body,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().postMaintenanceCheckScopes(
        body,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
