object Libs {

    const val APPAUTH = "net.openid:appauth:${Versions.APPAUTH}"
    const val ANDROID_GRADLE_PLUGIN = "com.android.tools.build:gradle:${Versions.ANDROID_GRADLE_PLUGIN}"
    const val APPCOMPAT = "androidx.appcompat:appcompat:${Versions.APPCOMPAT}"
    const val ARCH_TESTING = "androidx.arch.core:core-testing:${Versions.ARCH_TESTING}"
    const val BIOMETRIC = "androidx.biometric:biometric:${Versions.BIOMETRIC}"
    const val BROWSER = "androidx.browser:browser:${Versions.BROWSER}"
    const val COMPOSE_BOM = "androidx.compose:compose-bom:${Versions.COMPOSE_BOM}"
    const val COMMONS_CODEC = "commons-codec:commons-codec:${Versions.COMMONS_CODEC}"
    const val CONSTRAINT_LAYOUT = "androidx.constraintlayout:constraintlayout:${Versions.CONSTRAINT_LAYOUT}"
    const val CORE_KTX = "androidx.core:core-ktx:${Versions.CORE_KTX}"
    const val COROUTINES_TEST = "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.COROUTINES}"
    const val DOKKA = "org.jetbrains.dokka"
    const val FRAGMENT_KTX = "androidx.fragment:fragment-ktx:${Versions.FRAGMENT_KTX}"
    const val GOOGLE_MAPS_UTILS = "com.google.maps.android:android-maps-utils:${Versions.GOOGLE_MAPS_UTILS}"
    const val GOOGLE_PAY = "com.google.android.gms:play-services-wallet:${Versions.GOOGLE_PAY}"
    const val GOOGLE_PLAY_SERVICES_LOCATION = "com.google.android.gms:play-services-location:${Versions.GOOGLE_PLAY_SERVICES_LOCATION}"
    const val GOOGLE_PLAY_SERVICES_MAPS = "com.google.android.gms:play-services-maps:${Versions.GOOGLE_PLAY_SERVICES_MAPS}"
    const val GOOGLE_PROTOBUF_GRADLE_PLUGIN = "com.google.protobuf"
    const val GOOGLE_PROTOBUF_JAVALITE = "com.google.protobuf:protobuf-javalite:${Versions.GOOGLE_PROTOBUF_JAVALITE}"
    const val GSON = "com.google.code.gson:gson:${Versions.GSON}"
    const val HILT = "com.google.dagger:hilt-android:${Versions.HILT}"
    const val HILT_COMPILER = "com.google.dagger:hilt-android-compiler:${Versions.HILT}"
    const val HILT_GRADLE_PLUGIN = "com.google.dagger:hilt-android-gradle-plugin:${Versions.HILT}"
    const val KOIN_ANDROID = "io.insert-koin:koin-android:${Versions.KOIN}"
    const val KOIN_CORE = "io.insert-koin:koin-core:${Versions.KOIN}"
    const val KOIN_TEST = "io.insert-koin:koin-test:${Versions.KOIN}"
    const val KOTLIN_GRADLE_PLUGIN = "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.KOTLIN}"
    const val KOTLIN_COROUTINES_ANDROID = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.COROUTINES}"
    const val KTLINT_GRADLE_PLUGIN = "org.jlleitschuh.gradle.ktlint"
    const val JETBRAINS_IDEA_GRADLE_PLUGIN = "org.jetbrains.gradle.plugin.idea-ext"
    const val JETPACK_COMPOSE_CONSTRAINT_LAYOUT = "androidx.constraintlayout:constraintlayout-compose:${Versions.JETPACK_COMPOSE_CONSTRAINT_LAYOUT}"
    const val JETPACK_COMPOSE_MATERIAL = "androidx.compose.material:material"
    const val JETPACK_COMPOSE_MATERIAL_ICONS = "androidx.compose.material:material-icons-extended"
    const val JETPACK_COMPOSE_RUNTIME_LIVEDATA = "androidx.compose.runtime:runtime-livedata"
    const val JETPACK_COMPOSE_UI = "androidx.compose.ui:ui"
    const val JETPACK_COMPOSE_UI_TOOLING = "androidx.compose.ui:ui-tooling"
    const val JUNIT = "junit:junit:${Versions.JUNIT}"
    const val LIFECYCLE_LIVE_DATA_KTX = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.LIFECYCLE_KTX}"
    const val LIFECYCLE_PROCESS_KTX = "androidx.lifecycle:lifecycle-process:${Versions.LIFECYCLE_KTX}"
    const val LIFECYCLE_RUNTIME_KTX = "androidx.lifecycle:lifecycle-runtime-ktx:${Versions.LIFECYCLE_KTX}"
    const val LIFECYCLE_VIEW_MODEL_KTX = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.LIFECYCLE_KTX}"
    const val MATERIAL_COMPONENTS = "com.google.android.material:material:${Versions.MATERIAL_COMPONENTS}"
    const val MOCKITO_CORE = "org.mockito:mockito-core:${Versions.MOCKITO}"
    const val MOCKITO_INLINE = "org.mockito:mockito-inline:${Versions.MOCKITO}"
    const val MOCKITO_KOTLIN = "org.mockito.kotlin:mockito-kotlin:${Versions.MOCKITO_KOTLIN}"
    const val MOCKK = "io.mockk:mockk:${Versions.MOCKK}"
    const val MOCKK_ANDROID = "io.mockk:mockk-android:${Versions.MOCKK}"
    const val MOSHI_ADAPTERS = "com.squareup.moshi:moshi-adapters:${Versions.MOSHI_KOTLIN}"
    const val MOSHI_JSONAPI_JAR = "libs/moshi-jsonapi-${Versions.MOSHI_JSONAPI}.jar"
    const val MOSHI_JSONAPI_RETROFIT_CONVERTER_JAR = "libs/moshi-jsonapi-retrofit-converter-${Versions.MOSHI_JSONAPI}.jar"
    const val MOSHI_KOTLIN = "com.squareup.moshi:moshi-kotlin:${Versions.MOSHI_KOTLIN}"
    const val NAVIGATION_COMPOSE = "androidx.navigation:navigation-compose:${Versions.NAVIGATION}"
    const val NAVIGATION_FRAGMENT = "androidx.navigation:navigation-fragment-ktx:${Versions.NAVIGATION}"
    const val NAVIGATION_SAFE_ARGS = "androidx.navigation:navigation-safe-args-gradle-plugin:${Versions.NAVIGATION}"
    const val NAVIGATION_UI = "androidx.navigation:navigation-ui-ktx:${Versions.NAVIGATION}"
    const val NEXUS_STAGING = "io.codearte.nexus-staging"
    const val OKHTTP_LOGGING_INTERCEPTOR = "com.squareup.okhttp3:logging-interceptor:${Versions.OKHTTP}"
    const val ONE_TIME_PASSWORD = "dev.turingcomplete:kotlin-onetimepassword:${Versions.ONE_TIME_PASSWORD}"
    const val PREFERENCE_KTX = "androidx.preference:preference-ktx:${Versions.PREFERENCE_KTX}"
    const val RECYCLER_VIEW = "androidx.recyclerview:recyclerview:${Versions.RECYCLER_VIEW}"
    const val RETROFIT = "com.squareup.retrofit2:retrofit:${Versions.RETROFIT}"
    const val RETROFIT_ADAPTER_RXJAVA = "com.squareup.retrofit2:adapter-rxjava3:${Versions.RETROFIT}"
    const val RETROFIT_CONVERTER_GSON = "com.squareup.retrofit2:converter-gson:${Versions.RETROFIT}"
    const val RETROFIT_CONVERTER_MOSHI = "com.squareup.retrofit2:converter-moshi:${Versions.RETROFIT}"
    const val ROBOLECTRIC = "org.robolectric:robolectric:${Versions.ROBOLECTRIC}"
    const val RXANDROID = "io.reactivex.rxjava3:rxandroid:${Versions.RXANDROID}"
    const val RXJAVA = "io.reactivex.rxjava3:rxjava:${Versions.RXJAVA}"
    const val TEST_CORE = "androidx.test:core-ktx:${Versions.TEST_CORE}"
    const val TEST_INSTRUMENTATION_RUNNER = "androidx.test.runner.AndroidJUnitRunner"
    const val TEST_RULES = "androidx.test:rules:${Versions.TEST_RULES}"
    const val TEST_RUNNER = "androidx.test:runner:${Versions.TEST_RUNNER}"
    const val TIMBER = "com.jakewharton.timber:timber:${Versions.TIMBER}"
}
