stages:
  - test
  - build
  - publish

before_script:
  - export TAG_COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
  - "echo TAG_COMMIT_TIME: $TAG_COMMIT_TIME"
  - export BUILD_NUMBER=$(TZ=Etc/Utc date -j -f '%s' ${TAG_COMMIT_TIME} "+%Y%m%d%H")
  - "echo BUILD_NUMBER: $BUILD_NUMBER"
  - export BUILD_VERSION_NAME=`echo $(git describe --tags --abbrev=0) | cut -d '-' -f2`
  - "echo BUILD_VERSION_NAME: $BUILD_VERSION_NAME"

.only_merge_requests: &only_merge_requests
  interruptible: true
  only:
    refs:
      - merge_requests

.android_version:
  tags:
    - android-latest

.testing:
  extends: .android_version
  stage: test
  <<: *only_merge_requests

.rules_schedule: &rules_schedule
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $SCHEDULED_JOB == "snapshot-release"

.snapshot_version: &snapshot_version
  before_script:
    - export TAG_COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
    - "echo TAG_COMMIT_TIME: $TAG_COMMIT_TIME"
    - export BUILD_NUMBER=$(TZ=Etc/Utc date -j -f '%s' ${TAG_COMMIT_TIME} "+%Y%m%d%H")
    - "echo BUILD_NUMBER: $BUILD_NUMBER"
    - export BUILD_VERSION_NAME=`echo $(git describe --tags --abbrev=0) | cut -d '-' -f2`-SNAPSHOT # Add -SNAPSHOT to the version name
    - "echo BUILD_VERSION_NAME: $BUILD_VERSION_NAME"

.build_and_publish_library:
  extends: .android_version
  stage: build
  script:
    - bash -c "echo '$SIGNING_GPG_KEY_CONTENT' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"
    - ./gradlew clean library:assembleRelease
    - ./gradlew sourcesJar javadocJar
    - ./gradlew publishReleasePublicationToSonatypeRepository -PbuildNumber=$BUILD_NUMBER -PversionName=$BUILD_VERSION_NAME -PsigningKeyId=$SIGNING_KEY_ID -PsigningPassword=$SIGNING_PASSWORD -PsigningSecretKeyRingFile=$SIGNING_SECRET_KEY_RING_FILE -PossrhUsername=$OSSRH_USERNAME -PossrhPassword=$OSSRH_PASSWORD

.close_and_release_library:
  extends: .android_version
  stage: publish
  script:
    - ./gradlew findSonatypeStagingRepository closeAndReleaseSonatypeStagingRepository -PbuildNumber=$BUILD_NUMBER -PversionName=$BUILD_VERSION_NAME -PossrhUsername=$OSSRH_USERNAME -PossrhPassword=$OSSRH_PASSWORD -PsonatypeStagingProfileId=$SONATYPE_STAGING_PROFILE_ID

commit_format:
  stage: test
  before_script:
    - echo "Ignore global before_script"
  after_script:
    - echo "Ignore global after_script"
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${GIT_BASE_URL}/pace/mobile/common.git tmp/common
    - python3 tmp/common/scripts/validate_commit.py --project-id $CI_PROJECT_ID --merge-request-iid $CI_MERGE_REQUEST_IID
  <<: *only_merge_requests
  tags:
    - xcode-12.4

code_style:
  extends: .testing
  script:
    - ./gradlew clean ktlintCheck

unit_test:
  extends: .testing
  script:
    - ./gradlew clean library:testDebugUnitTest

android_test:
  extends: .testing
  before_script:
    #- "/usr/local/share/android-sdk/tools/bin/sdkmanager 'system-images;android-28;google_apis;x86_64'"
    #- "/usr/local/share/android-sdk/tools/bin/sdkmanager 'emulator'"
    #- "echo no | /usr/local/share/android-sdk/tools/bin/avdmanager create avd --force --name api28 --package 'system-images;android-28;google_apis;x86_64' --abi 'x86_64' --device '5.4in FWVGA'"
    - "/usr/local/share/android-sdk/tools/emulator -avd api28 > /dev/null 2>&1 -skin 480x854 -no-audio -no-boot-anim -no-snapshot -memory 2048 &"
    - "/usr/local/share/android-sdk/platform-tools/adb wait-for-device"
  script:
    - ./gradlew clean library:connectedAndroidTest

library_review:
  extends: .android_version
  stage: build
  script:
    - ./gradlew clean library:assemble
  <<: *only_merge_requests

documentation:
  extends: .android_version
  stage: build
  script:
    - ./gradlew clean dokkaHtml
    - zip -r android-pace-cloud-sdk-$BUILD_VERSION_NAME.zip library/build/dokka/*
  only:
    - tags
  artifacts:
    paths:
      - ./*.zip
    name: "android-pace-cloud-sdk-$BUILD_VERSION_NAME.zip"
    expire_in: 1 week

# Stable release
build_and_publish_stable:
  extends: .build_and_publish_library
  only:
    - tags

close_and_release_stable:
  extends: .close_and_release_library
  when: manual
  only:
    - tags

# Snapshot release
build_and_publish_snapshot:
  extends: .build_and_publish_library
  <<: *snapshot_version
  <<: *rules_schedule

close_and_release_snapshot:
  extends: .close_and_release_library
  <<: *snapshot_version
  <<: *rules_schedule

# GitHub release
framework_publish_github:
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${COMMON_REPO} tmp/common
    - pip3 install -r tmp/common/scripts/tags/requirements.txt
    - python3 tmp/common/scripts/tags/create_github_release.py -d pace/cloud-sdk-android
  tags:
    - xcode-12.4
  allow_failure: true
  stage: publish
  only:
    - tags
  when: manual
